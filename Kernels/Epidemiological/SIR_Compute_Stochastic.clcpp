#ifndef SIR_COMPUTE_STOCHASTIC_CLCPP
#define SIR_COMPUTE_STOCHASTIC_CLCPP
#include <SIR_Stochastic.clcpp>
#pragma OPENCL EXTENSION __cl_khr_fp64 : disable

//Requires:
//#define PRNG_generator

void assignVec(float* a, constant float* b, uint N)
{
    for (int i = 0; i < N; i++)
    {
        a[i] = b[i];
    }
}

void assignVec_g(global float* a, float* b, uint N)
{
    for (int i = 0; i < N; i++)
    {
        a[i] = b[i];
    }
}

__kernel void SIR_Compute_Stochastic(constant ulong* seeds, constant float* x0, global float* x_traj_g, float dt, uint Nt, constant float* param)
{

    float x_traj[3*N_TRAJECTORY_TIMESTEPS+1];
    for (int i = 0; i < 3*Nt; i++)
    {
        x_traj[i]= 0;
    }

    assignVec(x_traj, x0, 3);

    uint id = get_global_id(0);
    PRNG_generator rng(seeds[id]);

    for (uint i = 0; i < Nt; i++)
    {
        SIR_Stochastic_Binomial(&x_traj[3*i], &x_traj[3*(i+1)], param, dt, rng);
    }

    assignVec_g(&x_traj_g[3*(Nt+1)*id], x_traj, 3*(Nt+1));
}
#endif